// This work is licensed under a Attribution-NonCommercial-ShareAlike 4.0 International (CC BY-NC-SA 4.0) https://creativecommons.org/licenses/by-nc-sa/4.0/
// Â© StartFromDown

//@version=6
indicator("ICT Killzones & Silver Bullets [StartFromDown]"
  , overlay = true
  , max_lines_count = 500
  , max_boxes_count = 500
  , max_labels_count = 500)

//------------------------------------------------------------------------------
//Settings
//-----------------------------------------------------------------------------{
// Killzone Settings
var gmtOffset = input.int(0, "GMT Offset", minval=-12, maxval=12, group="Killzones")
var showKillzones = input.bool(true, "Show Killzones", group="Killzones")

// New York Killzone
showNy = input(true, "New York", inline="ny", group="Killzones")
nyCss = input.color(color.new(#ff5d00, 80), "", inline="ny", group="Killzones")

// London Open Killzone
showLdno = input(true, "London Open", inline="ldno", group="Killzones")
ldnoCss = input.color(color.new(#00bcd4, 80), "", inline="ldno", group="Killzones")

// London Close Killzone
showLdnc = input(true, "London Close", inline="ldnc", group="Killzones")
ldncCss = input.color(color.new(#2157f3, 80), "", inline="ldnc", group="Killzones")

// Asian Killzone
showAsia = input(true, "Asian", inline="asia", group="Killzones")
asiaCss = input.color(color.new(#e91e63, 80), "", inline="asia", group="Killzones")

// Fib Retracements
showFibs = input(true, "Show Retracements", group="Killzones Retracements")
extend = input(true, "Extend", group="Killzones Retracements")
reverse = input(false, "Reverse", group="Killzones Retracements")

// Fib Levels
fib0 = input(true, "", inline="0", group="Killzones Retracements")
fib0Value = input(0., "", inline="0", group="Killzones Retracements")
fib0Css = input(color.gray, "", inline="0", group="Killzones Retracements")

fib236 = input(true, "", inline="236", group="Killzones Retracements")
fib236Value = input(0.236, "", inline="236", group="Killzones Retracements")
fib236Css = input(color.yellow, "", inline="236", group="Killzones Retracements")

fib382 = input(true, "", inline="382", group="Killzones Retracements")
fib382Value = input(0.382, "", inline="382", group="Killzones Retracements")
fib382Css = input(color.fuchsia, "", inline="382", group="Killzones Retracements")

fib5 = input(true, "", inline="5", group="Killzones Retracements")
fib5Value = input(0.5, "", inline="5", group="Killzones Retracements")
fib5Css = input(color.orange, "", inline="5", group="Killzones Retracements")

fib618 = input(true, "", inline="618", group="Killzones Retracements")
fib618Value = input(0.618, "", inline="618", group="Killzones Retracements")
fib618Css = input(color.blue, "", inline="618", group="Killzones Retracements")

fib782 = input(true, "", inline="782", group="Killzones Retracements")
fib782Value = input(0.782, "", inline="782", group="Killzones Retracements")
fib782Css = input(color.green, "", inline="782", group="Killzones Retracements")

fib1 = input(true, "", inline="1", group="Killzones Retracements")
fib1Value = input(1., "", inline="1", group="Killzones Retracements")
fib1Css = input(color.gray, "", inline="1", group="Killzones Retracements")

// Silver Bullet Settings
var showSilverBullets = input.bool(true, "Show Silver Bullets", group="Silver Bullets")
var sbColor = input.color(color.new(#b2b5be, 50), "Silver Bullet Color", group="Silver Bullets")
left = input.int(5, "", minval=1, maxval=20, group="Silver Bullets")
choice = input.string("Super-Strict", "", inline="fvg", group="FVG", options=["All FVG", "Only FVG in the same direction of trend", "Strict", "Super-Strict"])
superstrict = choice == "Super-Strict"
iTrend = choice != "All FVG"
strict = choice == "Strict"
stricty = superstrict or strict
cBullFVG = input.color(#4dd0e160, "", inline="fvg", group="FVG")
cBearFVG = input.color(#ffc1b160, "", inline="fvg", group="FVG")
extendFVG = input.bool(true, "extend", inline="fvg", group="FVG")

//-----------------------------------------------------------------------------}
//Functions
//-----------------------------------------------------------------------------{
// Time functions
getHour() => hour(time)
getMinute() => minute(time)

// Killzone periods
isLondonKillzone() =>
    currentHour = getHour()
    currentMinute = getMinute()
    adjustedHour = (currentHour + gmtOffset + 24) % 24
    (adjustedHour >= 7 and adjustedHour < 9) or (adjustedHour >= 12 and adjustedHour < 14)

isNewYorkKillzone() =>
    currentHour = getHour()
    currentMinute = getMinute()
    adjustedHour = (currentHour + gmtOffset + 24) % 24
    (adjustedHour >= 13 and adjustedHour < 15) or (adjustedHour >= 19 and adjustedHour < 21)

isAsianKillzone() =>
    currentHour = getHour()
    currentMinute = getMinute()
    adjustedHour = (currentHour + gmtOffset + 24) % 24
    (adjustedHour >= 0 and adjustedHour < 2) or (adjustedHour >= 4 and adjustedHour < 6)

// Silver Bullet periods
isLondonSilverBullet() =>
    currentHour = getHour()
    currentMinute = getMinute()
    adjustedHour = (currentHour + gmtOffset + 24) % 24
    adjustedHour == 8 and currentMinute >= 0 and currentMinute < 30

isNewYorkSilverBullet() =>
    currentHour = getHour()
    currentMinute = getMinute()
    adjustedHour = (currentHour + gmtOffset + 24) % 24
    adjustedHour == 14 and currentMinute >= 0 and currentMinute < 30

isAsianSilverBullet() =>
    currentHour = getHour()
    currentMinute = getMinute()
    adjustedHour = (currentHour + gmtOffset + 24) % 24
    adjustedHour == 1 and currentMinute >= 0 and currentMinute < 30

// Fibonacci Functions
avg(val, max, min) =>
    var float fib = na
    if reverse
        fib := val * min + (1 - val) * max
    else
        fib := val * max + (1 - val) * min

fib_values() =>
    var fibs = array.new_float(7)
    array.set(fibs, 0, fib0 ? fib0Value : na)
    array.set(fibs, 1, fib236 ? fib236Value : na)
    array.set(fibs, 2, fib382 ? fib382Value : na)
    array.set(fibs, 3, fib5 ? fib5Value : na)
    array.set(fibs, 4, fib618 ? fib618Value : na)
    array.set(fibs, 5, fib782 ? fib782Value : na)
    array.set(fibs, 6, fib1 ? fib1Value : na)
    fibs

display_retracements(session) =>
    var lines = array.new_line(7)
    fibs = fib_values()
    var float max = na
    var float min = na

    if session and not session[1]
        max := high
        min := low
        array.set(lines, 0, line.new(bar_index, na, na, na, color=fib0Css))
        array.set(lines, 1, line.new(bar_index, na, na, na, color=fib236Css))
        array.set(lines, 2, line.new(bar_index, na, na, na, color=fib382Css))
        array.set(lines, 3, line.new(bar_index, na, na, na, color=fib5Css))
        array.set(lines, 4, line.new(bar_index, na, na, na, color=fib618Css))
        array.set(lines, 5, line.new(bar_index, na, na, na, color=fib782Css))
        array.set(lines, 6, line.new(bar_index, na, na, na, color=fib1Css))

    if session
        max := math.max(high, max)
        min := math.min(low, min)
        for [i, lvl] in lines
            fib = array.get(fibs, i)
            line.set_y1(lvl, avg(fib, max, min))
            line.set_xy2(lvl, bar_index, avg(fib, max, min))
    else if extend
        for [i, lvl] in lines
            fib = array.get(fibs, i)
            line.set_y1(lvl, avg(fib, max, min))
            line.set_xy2(lvl, bar_index, avg(fib, max, min))

//-----------------------------------------------------------------------------}
//Plotting
//-----------------------------------------------------------------------------{
// Plotting Killzones
bgcolor(showKillzones and isLondonKillzone() ? ldnoCss : na, title="London Killzone")
bgcolor(showKillzones and isNewYorkKillzone() ? nyCss : na, title="New York Killzone")
bgcolor(showKillzones and isAsianKillzone() ? asiaCss : na, title="Asian Killzone")

// Plotting Silver Bullets
plotshape(showSilverBullets and isLondonSilverBullet(), title="London Silver Bullet", location=location.belowbar, color=sbColor, style=shape.triangleup, size=size.small)
plotshape(showSilverBullets and isNewYorkSilverBullet(), title="New York Silver Bullet", location=location.belowbar, color=sbColor, style=shape.triangleup, size=size.small)
plotshape(showSilverBullets and isAsianSilverBullet(), title="Asian Silver Bullet", location=location.belowbar, color=sbColor, style=shape.triangleup, size=size.small)

// Add labels for current session
var label currentSession = na

if barstate.islast
    label.delete(currentSession)
    sessionText = ""
    if isLondonKillzone()
        sessionText := "London Killzone"
    else if isNewYorkKillzone()
        sessionText := "New York Killzone"
    else if isAsianKillzone()
        sessionText := "Asian Killzone"
    else
        sessionText := "No Active Killzone"
    currentSession := label.new(bar_index, high, sessionText, color=color.new(color.black, 0), style=label.style_label_down, textcolor=color.white, size=size.small)

// Add time labels
tfs = (60 / (timeframe.in_seconds(timeframe.period) / 60)) / 2

plotchar(isLondonSilverBullet() and not isLondonSilverBullet()[1] and showSilverBullets, title="London SB", location=location.top, text="London SB\n8:00-8:30", color=color(na), textcolor=sbColor, offset=+tfs)
plotchar(isNewYorkSilverBullet() and not isNewYorkSilverBullet()[1] and showSilverBullets, title="NY SB", location=location.top, text="NY SB\n14:00-14:30", color=color(na), textcolor=sbColor, offset=+tfs)
plotchar(isAsianSilverBullet() and not isAsianSilverBullet()[1] and showSilverBullets, title="Asian SB", location=location.top, text="Asian SB\n01:00-01:30", color=color(na), textcolor=sbColor, offset=+tfs)

// Display Fibonacci Retracements
if showFibs
    display_retracements(isLondonKillzone() or isNewYorkKillzone() or isAsianKillzone())

//-----------------------------------------------------------------------------}
